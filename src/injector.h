#if !defined(injector_h)

typedef struct
{
   void *address;
   u8 *replaced_code;
   umm replaced_code_size;
} Code_Info;

typedef struct
{
   void *base; // allocated in other program

   u8  loading_flag_aob[7];
   s32 loading_flag_base;
   s32 loading_flag_pointer;
   s32 loading_flag_jump;

   u8  map_name_aob[7];
   s32 map_name_base;
   s32 map_name_pointer;
   s32 map_name_jump;

   u8  player_inject_aob[6];
   s32 player_inject_base;
   s32 player_base_pointer;
   s32 player_inject_jump;

   u32 player_base;
   u32 loading_flag;
   u32 map_name;
} Registry;

global Registry registry;

global u8 global_inject_code[] = 
{
   // Note: Get loading flag
   /*0x00*/ 0x83, 0x85, 0xB4,0x12,0x00,0x00, 0x01,                 // add dword ptr[ebp+000012B4], 01
   /*0x07*/ 0x89, 0x2D, 0x00,0x00,0x00,0x00,                       // mov [loading_flag], ebp
   /*0x0D*/ 0xE9, 0x00,0x00,0x00,0x00,                             // jmp [loading_flag_jump]
   
   /*0x12*/ 0xCC,

   // Note: Get map name
   /*0x13*/ 0x8D, 0x56, 0x04,                                      // lea edx,[esi+04]
   /*0x16*/ 0x89, 0x15, 0x00,0x00,0x00,0x00,                       // mov [map_name], edx
   /*0x1C*/ 0x8B, 0xC8,                                            // mov ecx, eax
   /*0x1E*/ 0x29, 0xCA,                                            // sub edx, ecx
   /*0x20*/ 0xE9, 0x00,0x00,0x00,0x00,                             // jmp [map_name_jump]

   /*0x25*/ 0xCC,

   // Note: Get player base
   /*0x26*/ 0x81, 0xBF, 0x04,0x03,0x00,0x00, 0x00,0x01,0x00,0x06,  // cmp [edi+00000304],06000100
   /*0x30*/ 0x0F,0x84, 0x55,0x00,0x00,0x00,                        // je [player_inject_player_label]
   /*0x36*/ 0x81, 0xBF, 0x04,0x03,0x00,0x00, 0x01,0x01,0x10,0x06,  // cmp [edi+00000304],06100101
   /*0x40*/ 0x0F,0x84, 0x45,0x00,0x00,0x00,                        // je [player_inject_player_label]
   /*0x46*/ 0x81, 0xBF, 0x04,0x03,0x00,0x00, 0x00,0x01,0x10,0x06,  // cmp [edi+00000304],06100100
   /*0x50*/ 0x0F,0x84, 0x35,0x00,0x00,0x00,                        // je [player_inject_player_label]
   /*0x56*/ 0x81, 0xBF, 0x04,0x03,0x00,0x00, 0x00,0x01,0x08,0x06,  // cmp [edi+00000304],06080100
   /*0x60*/ 0x0F,0x84, 0x25,0x00,0x00,0x00,                        // je [player_inject_player_label]
   /*0x66*/ 0x81, 0xBF, 0x04,0x03,0x00,0x00, 0x00,0x01,0x18,0x06,  // cmp [edi+00000304],06180100
   /*0x70*/ 0x0F,0x84, 0x15,0x00,0x00,0x00,                        // je [player_inject_player_label]
   /*0x76*/ 0x81, 0xBF, 0x04,0x03,0x00,0x00, 0x00,0x01,0x1C,0x06,  // cmp [edi+00000304],061C0100
   /*0x80*/ 0x0F,0x84, 0x05,0x00,0x00,0x00,                        // je [player_inject_player_label]
   /*0x86*/ 0xE9, 0x06,0x00,0x00,0x00,                             // jmp [player_inject_player_label + 6]
   /*0x8B*/ 0x89, 0x3D, 0x00,0x00,0x00,0x00,                       // mov [player_base], edi
   /*0x91*/ 0x8B, 0x8F, 0xE0,0x02,0x00,0x00,                       // mov ecx,[edi+000002E0]
   /*0x97*/ 0xE9, 0x00,0x00,0x00,0x00,                             // jmp [player_inject_jump]

   /*0x9C*/ 0xCC,

   // Note: Stored variables
   /*0x9D*/ 0x00,0x00,0x00,0x00, // player_base
   /*0xA1*/ 0x00,0x00,0x00,0x00, // loading_flag
   /*0xA5*/ 0x00,0x00,0x00,0x00  // map_name
};

#define MAX_MODULE_COUNT 128

#define injector_h
#endif